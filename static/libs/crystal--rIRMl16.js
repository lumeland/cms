function wordRegExp(e,t){return new RegExp((t?"":"^")+"(?:"+e.join("|")+")"+(t?"$":"\\b"))}function chain(e,t,n){return n.tokenize.push(e),e(t,n)}var operators=/^(?:[-+/%|&^]|\*\*?|[<>]{2})/,conditionalOperators=/^(?:[=!]~|===|<=>|[<>=!]=?|[|&]{2}|~)/,indexingOperators=/^(?:\[\][?=]?)/,anotherOperators=/^(?:\.(?:\.{2})?|->|[?:])/,idents=/^[a-z_\u009F-\uFFFF][a-zA-Z0-9_\u009F-\uFFFF]*/,types=/^[A-Z_\u009F-\uFFFF][a-zA-Z0-9_\u009F-\uFFFF]*/,keywords=wordRegExp(["abstract","alias","as","asm","begin","break","case","class","def","do","else","elsif","end","ensure","enum","extend","for","fun","if","include","instance_sizeof","lib","macro","module","next","of","out","pointerof","private","protected","rescue","return","require","select","sizeof","struct","super","then","type","typeof","uninitialized","union","unless","until","when","while","with","yield","__DIR__","__END_LINE__","__FILE__","__LINE__"]),atomWords=wordRegExp(["true","false","nil","self"]),indentKeywordsArray=["def","fun","macro","class","module","struct","lib","enum","union","do","for"],indentKeywords=wordRegExp(indentKeywordsArray),indentExpressionKeywordsArray=["if","unless","case","while","until","begin","then"],indentExpressionKeywords=wordRegExp(indentExpressionKeywordsArray),dedentKeywordsArray=["end","else","elsif","rescue","ensure"],dedentKeywords=wordRegExp(dedentKeywordsArray),dedentPunctualsArray=["\\)","\\}","\\]"],dedentPunctuals=new RegExp("^(?:"+dedentPunctualsArray.join("|")+")$"),nextTokenizer={def:tokenFollowIdent,fun:tokenFollowIdent,macro:tokenMacroDef,class:tokenFollowType,module:tokenFollowType,struct:tokenFollowType,lib:tokenFollowType,enum:tokenFollowType,union:tokenFollowType},matching={"[":"]","{":"}","(":")","<":">"};function tokenBase(e,t){if(e.eatSpace())return null;if("\\"!=t.lastToken&&e.match("{%",!1))return chain(tokenMacro("%","%"),e,t);if("\\"!=t.lastToken&&e.match("{{",!1))return chain(tokenMacro("{","}"),e,t);if("#"==e.peek())return e.skipToEnd(),"comment";var n;if(e.match(idents))return e.eat(/[?!]/),n=e.current(),e.eat(":")?"atom":"."==t.lastToken?"property":keywords.test(n)?(indentKeywords.test(n)?"fun"==n&&t.blocks.indexOf("lib")>=0||"def"==n&&"abstract"==t.lastToken||(t.blocks.push(n),t.currentIndent+=1):"operator"!=t.lastStyle&&t.lastStyle||!indentExpressionKeywords.test(n)?"end"==n&&(t.blocks.pop(),t.currentIndent-=1):(t.blocks.push(n),t.currentIndent+=1),nextTokenizer.hasOwnProperty(n)&&t.tokenize.push(nextTokenizer[n]),"keyword"):atomWords.test(n)?"atom":"variable";if(e.eat("@"))return"["==e.peek()?chain(tokenNest("[","]","meta"),e,t):(e.eat("@"),e.match(idents)||e.match(types),"propertyName");if(e.match(types))return"tag";if(e.eat(":"))return e.eat('"')?chain(tokenQuote('"',"atom",!1),e,t):e.match(idents)||e.match(types)||e.match(operators)||e.match(conditionalOperators)||e.match(indexingOperators)?"atom":(e.eat(":"),"operator");if(e.eat('"'))return chain(tokenQuote('"',"string",!0),e,t);if("%"==e.peek()){var r,o="string",a=!0;if(e.match("%r"))o="string.special",r=e.next();else if(e.match("%w"))a=!1,r=e.next();else if(e.match("%q"))a=!1,r=e.next();else if(r=e.match(/^%([^\w\s=])/))r=r[1];else{if(e.match(/^%[a-zA-Z_\u009F-\uFFFF][\w\u009F-\uFFFF]*/))return"meta";if(e.eat("%"))return"operator"}return matching.hasOwnProperty(r)&&(r=matching[r]),chain(tokenQuote(r,o,a),e,t)}return(n=e.match(/^<<-('?)([A-Z]\w*)\1/))?chain(tokenHereDoc(n[2],!n[1]),e,t):e.eat("'")?(e.match(/^(?:[^']|\\(?:[befnrtv0'"]|[0-7]{3}|u(?:[0-9a-fA-F]{4}|\{[0-9a-fA-F]{1,6}\})))/),e.eat("'"),"atom"):e.eat("0")?(e.eat("x")?e.match(/^[0-9a-fA-F_]+/):e.eat("o")?e.match(/^[0-7_]+/):e.eat("b")&&e.match(/^[01_]+/),"number"):e.eat(/^\d/)?(e.match(/^[\d_]*(?:\.[\d_]+)?(?:[eE][+-]?\d+)?/),"number"):e.match(operators)?(e.eat("="),"operator"):e.match(conditionalOperators)||e.match(anotherOperators)?"operator":(n=e.match(/[({[]/,!1))?chain(tokenNest(n=n[0],matching[n],null),e,t):e.eat("\\")?(e.next(),"meta"):(e.next(),null)}function tokenNest(e,t,n,r){return function(o,a){if(!r&&o.match(e))return a.tokenize[a.tokenize.length-1]=tokenNest(e,t,n,!0),a.currentIndent+=1,n;var i=tokenBase(o,a);return o.current()===t&&(a.tokenize.pop(),a.currentIndent-=1,i=n),i}}function tokenMacro(e,t,n){return function(r,o){return!n&&r.match("{"+e)?(o.currentIndent+=1,o.tokenize[o.tokenize.length-1]=tokenMacro(e,t,!0),"meta"):r.match(t+"}")?(o.currentIndent-=1,o.tokenize.pop(),"meta"):tokenBase(r,o)}}function tokenMacroDef(e,t){if(e.eatSpace())return null;var n;if(n=e.match(idents)){if("def"==n)return"keyword";e.eat(/[?!]/)}return t.tokenize.pop(),"def"}function tokenFollowIdent(e,t){return e.eatSpace()?null:(e.match(idents)?e.eat(/[!?]/):e.match(operators)||e.match(conditionalOperators)||e.match(indexingOperators),t.tokenize.pop(),"def")}function tokenFollowType(e,t){return e.eatSpace()?null:(e.match(types),t.tokenize.pop(),"def")}function tokenQuote(e,t,n){return function(r,o){for(var a=!1;r.peek();)if(a)r.next(),a=!1;else{if(r.match("{%",!1))return o.tokenize.push(tokenMacro("%","%")),t;if(r.match("{{",!1))return o.tokenize.push(tokenMacro("{","}")),t;if(n&&r.match("#{",!1))return o.tokenize.push(tokenNest("#{","}","meta")),t;var i=r.next();if(i==e)return o.tokenize.pop(),t;a=n&&"\\"==i}return t}}function tokenHereDoc(e,t){return function(n,r){if(n.sol()&&(n.eatSpace(),n.match(e)))return r.tokenize.pop(),"string";for(var o=!1;n.peek();)if(o)n.next(),o=!1;else{if(n.match("{%",!1))return r.tokenize.push(tokenMacro("%","%")),"string";if(n.match("{{",!1))return r.tokenize.push(tokenMacro("{","}")),"string";if(t&&n.match("#{",!1))return r.tokenize.push(tokenNest("#{","}","meta")),"string";o="\\"==n.next()&&t}return"string"}}const crystal={name:"crystal",startState:function(){return{tokenize:[tokenBase],currentIndent:0,lastToken:null,lastStyle:null,blocks:[]}},token:function(e,t){var n=t.tokenize[t.tokenize.length-1](e,t),r=e.current();return n&&"comment"!=n&&(t.lastToken=r,t.lastStyle=n),n},indent:function(e,t,n){return t=t.replace(/^\s*(?:\{%)?\s*|\s*(?:%\})?\s*$/g,""),dedentKeywords.test(t)||dedentPunctuals.test(t)?n.unit*(e.currentIndent-1):n.unit*e.currentIndent},languageData:{indentOnInput:wordRegExp(dedentPunctualsArray.concat(dedentKeywordsArray),!0),commentTokens:{line:"#"}}};export{crystal};